package lessons.week10.dp.models.path;

/**
 * @version 1.0
 * @Description: 动态规划经典路径模型
 * @author: bingyu
 * @date: 2023/5/10
 */
public class PathModel {

    /*
     1.给到一个二维矩阵，从某个点以某种走法（只能向下或向右）到达另一个点，
        a)总共有多少中走法？
        b)最长/最短路径为多少？

        我们以最小路径和这题为例
        题目: 给定一个包含非负整数的 mxn网格grid ，请找出一条从左上角到右下角的路径，使得路径上的数字总和为最小。
        说明：每次只能向下或者向右移动一步。

        示例 1：
        1 3 1
        1 5 1
        4 2 1
        输入：grid = [[1,3,1],[1,5,1],[4,2,1]]
        输出：7
        解释：因为路径 1→3→1→1→1 的总和最小

        1.构建多阶段决策模型
        从(0,0)走到(m-1,n-1)，总共要走m+n-2步，也就对应着m+n-2个决策阶段。每个阶段都有
        向右走或者向下走两种决策选择。

        2.定义状态
        int dp[m][n];dp[i][j]表示到达(i,j)这个位置的最短路径

        3.定义状态转移方程
        (i,j)这个位置只有可能通过(i-1,j)和(i,j-1)两个位置过来dp[i][j]=min(dp[i-1][j],dp[i][j-1]) + grid[i][j]
     */
}
